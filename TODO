To take into acount:
- Patterns and implementation details used here will set the standards for the rest of our user interface.
- Strictly typed
- Naming
- Client side state management
- Consider rendering performance
- Error handling (web sockets)
- Should be able to handle high data input
- Testing

Data:
[OK] Implement connection with WebSocket
[OK] Process first snapshot of data
[] Process following orderbook's deltas
[] Part 2: Change grouping based on market ticket size
[] Part 3: Subscribe to different market (review grouping)
[] Part 4: Force Websocket feed to throw and error and handle it

UI:
[OK] Add styles for orderbook header
[OK] Implement table
[OK] Implement row showing total
[OK] Change depth visualizer colors and alignment based on asks vs bids
[] Change order of columns based on asks vs bids

[] Move colors to variables